#include<bits/stdc++.h>
#define MAX 1000
using namespace std;

int m, n;
int c[MAX][MAX], b[MAX][MAX];

int LCSubsequence(string x, string y){
        m = x.size();
        n = y.size();

        for(int i=1; i<=m; i++) c[i][0] = 0;
        for(int i=0; i<=n; i++) c[0][i] = 0;

        for(int i=1; i<=m; i++){
                for(int j=1; j<=n; j++){
                        if(x[i-1] == y[j-1]){
                                c[i][j] = c[i-1][j-1] + 1;
                                b[i][j] = 1;
                        }
                        else if(c[i-1][j] >= c[i][j-1]){
                                c[i][j] = c[i-1][j];
                                b[i][j] = 2; //from north
                        }
                        else{
                                c[i][j] = c[i][j-1];
                                b[i][j] = 3; //from west
                        }
                }
        }

        return c[m][n];
}

int main()
{
        string A,B;
        cin>>A>>B;
        cout<<endl<<LCSubsequence(A,B);
        
        vector<char> C;
        
        int i=m;
        int j=n;
        
        
        while(!(i==0 || j==0))
        {
                if(b[i][j]==1)
                {
                        C.push_back(B[j-1]);
                        i--;
                        j--;
                }
                else
                        if(b[i][j]==2)
                                i--;
                        else
                                j--;
        }
        cout<<endl;
        for(int k=C.size()-1;k>=0;k--)
                cout<<C[k];

        cout<<endl<<endl;
         


        return 0;
}
